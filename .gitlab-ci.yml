variables:
  GIT_STRATEGY: clone

cache:
  key: none
  paths: []
  policy: pull

.gcc-deps: &gcc-deps
  tags:
    - docker
    - linux
  before_script:
    - apt-get update -q || true
    - apt-get install -qy --no-install-recommends
        automake
        libtool
    - apt-get install -qy --no-install-recommends
        libbluetooth-dev
    - apt-get install -qy --no-install-recommends
        cython
        libpython-dev
        python
        python-setuptools
        python-wheel
    - apt-get install -qy --no-install-recommends
        cython3
        libpython3-dev
        python3
        python3-setuptools
        python3-wheel

.build: &build
  stage: build
  script:
    - autoreconf -i
    - ./configure $CONFIGURE_OPTIONS
    - make
  artifacts:
    untracked: true

.test: &test
  stage: test
  script:
    - touch aclocal.m4 configure config.status Makefile.in
    - make -t
    - make check

build:gcc:4:
  image: gcc:4
  <<: *gcc-deps
  <<: *build

test:gcc:4:
  image: gcc:4
  dependencies:
    - build:gcc:4
  <<: *gcc-deps
  <<: *test

build:gcc:5:
  image: gcc:5
  <<: *gcc-deps
  <<: *build

test:gcc:5:
  image: gcc:5
  dependencies:
    - build:gcc:5
  <<: *gcc-deps
  <<: *test

build:gcc:6:
  image: gcc:6
  <<: *gcc-deps
  <<: *build

test:gcc:6:
  image: gcc:6
  dependencies:
    - build:gcc:6
  <<: *gcc-deps
  <<: *test

build:gcc:7:
  image: gcc:7
  <<: *gcc-deps
  <<: *build

test:gcc:7:
  image: gcc:7
  dependencies:
    - build:gcc:7
  <<: *gcc-deps
  <<: *test

build:gcc:8:
  image: gcc:8
  <<: *gcc-deps
  <<: *build

test:gcc:8:
  image: gcc:8
  dependencies:
    - build:gcc:8
  <<: *gcc-deps
  <<: *test

build:gcc:9:
  image: gcc:9
  <<: *gcc-deps
  <<: *build

test:gcc:9:
  image: gcc:9
  dependencies:
    - build:gcc:9
  <<: *gcc-deps
  <<: *test

.mingw-deps: &mingw-deps
  tags:
    - docker
    - linux
  image: debian:buster
  before_script:
    - apt-get update -q
    - apt-get install -qy --no-install-recommends
        apt-transport-https
        build-essential
        curl
        gnupg
        software-properties-common
    - apt-get install -qy --no-install-recommends
        mingw-w64
    - curl -L https://dl.winehq.org/wine-builds/winehq.key | apt-key add -
    - apt-add-repository 'deb https://dl.winehq.org/wine-builds/debian/ buster main'
    - dpkg --add-architecture i386
    - apt-get update -q
    - apt-get install -qy
        winehq-stable
    - wineboot -i
    - apt-get install -qy --no-install-recommends
        automake
        libtool

build:i686-w64-mingw32:
  <<: *mingw-deps
  <<: *build
  variables:
    CONFIGURE_OPTIONS: --host=i686-w64-mingw32 --disable-python
    WINEPATH: Z:\\usr\\lib\\gcc\\i686-w64-mingw32\\8.3-posix\;Z:\\usr\\i686-w64-mingw32\\lib

test:i686-w64-mingw32:
  dependencies:
    - build:i686-w64-mingw32
  <<: *mingw-deps
  <<: *test
  variables:
    WINEPATH: Z:\\usr\\lib\\gcc\\i686-w64-mingw32\\8.3-posix\;Z:\\usr\\i686-w64-mingw32\\lib

build:x86_64-w64-mingw32:
  <<: *mingw-deps
  <<: *build
  variables:
    CONFIGURE_OPTIONS: --host=x86_64-w64-mingw32 --disable-python
    WINEPATH: Z:\\usr\\lib\\gcc\\x86_64-w64-mingw32\\8.3-posix\;Z:\\usr\\x86_64-w64-mingw32\\lib

test:x86_64-w64-mingw32:
  dependencies:
    - build:x86_64-w64-mingw32
  <<: *mingw-deps
  <<: *test
  variables:
    WINEPATH: Z:\\usr\\lib\\gcc\\x86_64-w64-mingw32\\8.3-posix\;Z:\\usr\\x86_64-w64-mingw32\\lib

lcov:
  stage: test
  tags:
    - docker
    - linux
  image: debian:sid
  dependencies: []
  before_script:
    - apt-get update -q
    - apt-get install -qy --no-install-recommends
        build-essential
    - apt-get install -qy --no-install-recommends
        automake
        libtool
    - apt-get install -qy --no-install-recommends
        libbluetooth-dev
    - apt-get install -qy --no-install-recommends
        doxygen
        graphviz
        lcov
  script:
    - autoreconf -i
    - ./configure --enable-code-coverage --disable-shared
    - make
    - make check-code-coverage
    - make html
    - lcov --summary coverage.info --rc lcov_branch_coverage=1
  artifacts:
    paths:
      - coverage/
      - doc/
    expire_in: 1 week

scan-build:
  stage: test
  tags:
    - docker
    - linux
  image: debian:sid
  dependencies: []
  before_script:
    - apt-get update -q
    - apt-get install -qy --no-install-recommends
        build-essential
        clang-tools
    - apt-get install -qy --no-install-recommends
        automake
        libtool
    - apt-get install -qy --no-install-recommends
        libbluetooth-dev
  script:
    - autoreconf -i
    - scan-build ./configure --disable-python
    - scan-build --keep-cc -o ./scan-build make check
  artifacts:
    paths:
      - scan-build/
    expire_in: 1 week

pages:
  stage: deploy
  only:
    - master
  image: alpine:latest
  dependencies:
    - lcov
    - scan-build
  script:
    - mkdir -p public
    - mv coverage public/lcov
    - mv doc/html public/doxygen
    - mv scan-build/* public/scan-build
  artifacts:
    paths:
      - public
    expire_in: 1 weeks
